@model Cockpit_NextGenMVC.BAL.Tbl_Unmapped_Users[]
@{
    ViewBag.Title = "Team Members";
    var IsRowSelectableforSignOff = true; 
    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];
    var UserRole = SessionUSer.ROLE_DESC.ToString();

    if (UserRole == "Supervisor" || UserRole=="Support")
    {
        IsRowSelectableforSignOff = false;
    }
}
<div class="content-wrapper">
    <section class="content-header">
        <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="halflings-icon home"></i>Home</a></li>
        <li><a href="#"><i class="halflings-icon cog"></i>@ViewBag.Title</a></li>
        </ol>
   </section>
    <section class="content">
    <div class="row">
                <div class="col-xs-12">
    <div class="box">
                <div class="box-header" data-original-title>
                    <h2>
                        <i class="halflings-icon user"></i><span class="break"></span>Un-Mapped Users for Region -
                        @SessionUSer.SUPERREGION</h2>
                    <div class="box-icon">
                        <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a><a href="#"
                            class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                    </div>
                </div>
                <div class="box-content">
                    @(Html.Kendo().Grid(Model)
                   .Name("grdUnmappedUsers")
                   .ToolBar(tools => tools.Excel())
                   .Columns(columns =>
                    {
                        columns.Bound(p => p.REGION).Width(100);
                        columns.Bound(p => p.USERGROUP)
                            .Template(@<text><a href="@Url.Action("UnMappedUserBySalesOrg", "User", new { SalesOrg = @item.USERGROUP })">@item.USERGROUP</a></text>)
                            .ClientTemplate("<a href='/User/UnMappedUserBySalesOrg?Region=#= REGION#&UserGroup=#= USERGROUP#'>#=USERGROUP#</a>").Title("User Group").Width(120);
                        columns.Bound(p => p.TotalUser).Width(140).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Order_Count).Width(100).Filterable(fb => fb.Equals(true)).Title("Orders");
                        columns.Bound(p => p.Total_NV).Width(100).Title("Net Value (K$)").Format("{0:c}");
                        


                    })
                                    .Scrollable(sc => sc.Height(350))
                                    .Pageable()
                                    .Sortable()
                                    .Scrollable()
                                    .Filterable()
                                    .Groupable()
                                    .ColumnMenu()

                                    .Excel(excel => excel
                                        .FileName("CNG_Users.xlsx")
                                        .Filterable(true)
                                        .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                                        )
                                    .HtmlAttributes(new { style = "height:630px;" })
                                    .DataSource(dataSource => dataSource
                                        .Ajax()

                                        .PageSize(20)
                                                .Events(events => events.Error("onError"))

                                        .Model(model => model.Id(p => p.USERGROUP))
                                        .ServerOperation(false)

                                    )
                                    .Resizable(resize => resize.Columns(true))

                                        )
                            <p>
                        @Html.ActionLink("Back to Login", "UserLogin")
                    </p>
                </div>
                <!--/span-->
            </div>
            <!--/row-->
        </div>
    </div>
    <!--/fluid-row-->
    </section>

  
</div>
<!--/fluid-row-->

<script type="text/javascript">
    function onError(e, status) {
        if (e.errors) {
            var message = "Error:\n";

            var grid = $('#grdTeamUsers').data('kendoGrid');
            var gridElement = grid.editable.element;

            var validationMessageTemplate = kendo.template(
            "<div id='#=field#_validationMessage' " +
                "class='k-widget k-tooltip k-tooltip-validation " +
                    "k-invalid-msg field-validation-error' " +
                "style='margin: 0.5em;' data-for='#=field#' " +
                "data-val-msg-for='#=field#' role='alert'>" +
                "<span class='k-icon k-warning'></span>" +
                "#=message#" +
                "<div class='k-callout k-callout-n'></div>" +
            "</div>");

            $.each(e.errors, function (key, value) {
                if (value.errors) {
                    gridElement.find("[data-valmsg-for=" + key + "],[data-val-msg-for=" + key + "]")
                    .replaceWith(validationMessageTemplate({ field: key, message: value.errors[0] }));
                    gridElement.find("input[name=" + key + "]").focus();
                }
            });
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind
            });
        }
    }
</script>
