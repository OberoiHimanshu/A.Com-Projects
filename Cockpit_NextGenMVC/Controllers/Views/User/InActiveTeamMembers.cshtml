@model IEnumerable<Cockpit_NextGenMVC.BAL.VW_USERS>
@{
    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];
    ViewBag.Title = "Team Members";
    var UserRole = SessionUSer.ROLE_DESC.ToString();
    var IsRowSelectableforSignOff = true;

    if (UserRole == "Supervisor" || UserRole=="Support")
    {
        IsRowSelectableforSignOff = false;  
    }
}
<div class="content-wrapper">
    <section class="content-header">
    <h1>
        My User Profile
        <small>- Click here for <a id="btnAdvancedSearch" href="#">Advanced Search</a></small>
        </h1>
        <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="halflings-icon home"></i>Home</a></li>
        <li><a href="#"><i class="halflings-icon cog"></i>@ViewBag.Title</a></li>
        </ol>
   </section>
    <section class="content">
    <div class="row">
                <div class="col-xs-12">
    <div class="box">
                <div class="box-header" data-original-title>
                    <h2>
                        <i class="halflings-icon user"></i><span class="break"></span>Profile Details (In Active Users) -
                        @SessionUSer.TEAM_NAME</h2>
                    <div class="box-icon">
                        <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a><a href="#"
                            class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                    </div>
                </div>
                @{ if (Model.Count() > 0)
                       
                   {   
                       
                <div class="box-content">
                    @(Html.Kendo().Grid(Model)
                   .Name("grdTeamUsers")
                   .ToolBar(tools => tools.Excel())
                   .Columns(columns =>
                    {
                        columns.Bound(p => p.FULLNAME).Width(100);
                        columns.Bound(p => p.EMAIL).Groupable(false).Width(100);
                        columns.Bound(p => p.SAP_User_Name).Width(100).Filterable(fb => fb.Equals(true));
                        columns.Bound(p => p.NTLOGIN).Width(100).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.MANAGER).Width(140).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.ROLE_DESC).EditorTemplateName("RoleList").Width(100);
                        columns.Bound(p => p.ACTIVE).ClientTemplate("<a class='handc' title='Click to activate user' onclick=\"ActivateDeactivateUser('#=USER_ID#','#=EMAIL#','#=FULLNAME#')\">Inactive</a>");
                        columns.Command(command => command.Edit()).Width(55).Visible(false);
                        })
                          .Scrollable(sc => sc.Height(350))
                          .Pageable()
                          .Sortable()
                          .Scrollable()
                          .Filterable()
                          .Groupable()
                          .ColumnMenu()

                                          //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditUser"))
                          .Excel(excel => excel
                              .FileName("CNG_Users.xlsx")
                              .Filterable(true)
                              .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                              )
                          .HtmlAttributes(new { style = "height:630px;" })
                          .DataSource(dataSource => dataSource
                              .Ajax()

                              .PageSize(20)
                                      .Events(events => events.Error("onError"))

                              .Model(model => model.Id(p => p.USER_ID))
                              .ServerOperation(false)
                                      .Update(u => u.Action("SaveUserDetails", "User"))
                          )
                          .Resizable(resize => resize.Columns(true))

                              )
                            <p>
                        @Html.ActionLink("Back to Login", "UserLogin")
                    </p>
                </div>
                    }
                    else
                    {
                       <div class="box-content"> <span style="color:Green; font-size:22px; font-weight:bold;"> No pending actions ! </span> </div>
                   }
                    }

                <!--/span-->
            </div>
            <!--/row-->
        </div>
    </div>
    <!--/fluid-row-->
    </section>

  
</div>
<script language="javascript">
    function DoSomeWork(userid,ntlogin) {
        $.ajax({
            url: "/User/ActivateUser",
            type: "POST",
            data: JSON.stringify({ 'UserID': userid, 'Ntlogin': ntlogin }),
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.status == "Success") {
                    alert("Done");
                } else {
                    alert("Error occurs on the Database level!");
                }
            },
            error: function () {
                alert("An error has occured!!!");
            }
        });
    }
</script>