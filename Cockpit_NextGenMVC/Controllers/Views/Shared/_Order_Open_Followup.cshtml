@{
    List<Cockpit_NextGenMVC.BAL.Tbl_Followups> lstFollowups = new List<Cockpit_NextGenMVC.BAL.Tbl_Followups>();
}

 @(Html.Kendo().Grid(lstFollowups)
                        .Name("grdOrderOpenFollowups")
                   .ToolBar(tools => tools.Excel())
                   .Columns(columns =>
                    {
                        columns.Command(command => command.Edit()).Width(30).Title("Edit Followup");
                        columns.Bound(p => p.Sales_Order).Title("Order Number").Width(60);
                        columns.Bound(p => p.CustomerName).Title("Customer Name").Width(80);
                        
                        columns.Template(@<text></text>)
                                       .ClientTemplate(
                                "<span class='title'>#: Description #</span><br />" +
                                "<span class='description'>Owner : #: Owner#</span><br />" +
                                "<span class='description'>Priority : #: Priority# </span><br />" +
                                "<span class='description'>Due Date : #: kendo.format('{0:MM/dd/yyyy}', DueDate)# </span><br />" +
                                "<span class='description'>Status : #: Status# </span>"
                                       )
                        .HeaderTemplate("Followup Details").Width(80);
                        columns.Bound(p => p.Comment).Title("Comments").Width(80);
                        columns.Template(@<text></text>)
                                       .ClientTemplate(
                                "<span class='title'>Created on : #: kendo.format('{0:MM/dd/yyyy}', Created_On) #</span><br />" +
                                "<span class='description'>Created By : #: Created_By#</span><br />" +
                                "<span class='description'>Modified On : : #: kendo.format('{0:MM/dd/yyyy}', Modified_On) # </span><br />" +
                                "<span class='description'>Modified By : : #: Modified_By# </span>"
                                       )
                        .HeaderTemplate("Dates Information").Width(80);                        
                    })
                    .Scrollable(sc => sc.Height(350))
                    .Pageable()
                    .Sortable()
                    .Scrollable()
                    .Filterable()
                    .ColumnMenu()
                    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditFollowup").Window(w => w.Title("Edit Followup").HtmlAttributes(new { @style = "width:150px;" })))
                    .Excel(excel => excel
                        .FileName("CNG_Order_Open_Followps.xlsx")
                        .Filterable(true)
                        .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                        )
                    .HtmlAttributes(new { style = "height:630px;" })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        
                        .PageSize(20)
                             .Events(events => events.Error("onError").RequestEnd("Refresh_OpenFollowupList"))
                             .Model(model =>
                             {
                                 model.Id(p => p.Sales_Order);
                                 model.Field(p => p.Followupid).Editable(false);
                                 model.Field(p => p.Sales_Order).Editable(false);
                                 model.Field(p => p.CustomerName).Editable(true);
                                 model.Field(p => p.Description).Editable(true);
                                 model.Field(p => p.Comment).Editable(true);
                                 model.Field(p => p.Created_By).Editable(false);
                                 model.Field(p => p.DueDate).Editable(true);
                                 model.Field(p => p.Priority).Editable(true);
                                 model.Field(p => p.Status).Editable(true);
                                 model.Field(p => p.Modified_By).Editable(false);
                                 model.Field(p => p.Modified_On).Editable(false);
                                 model.Field(p => p.Created_By).Editable(false);
                                 model.Field(p => p.Created_On).Editable(false);
                             })
                        .ServerOperation(false)
                        .Update(read => read.Action("UpdateFollowups", "Followup"))
                    )
                    .Resizable(resize => resize.Columns(true))

                        )

