@model IEnumerable<Cockpit_NextGenMVC.BAL.TBL_ORDER_COMMENT_VIEW>
@{
    var currentBCR = ViewBag.currentBCR;
    Cockpit_NextGenMVC.BAL.Tbl_Review_Reports oCurrentReport = ViewBag.oCurrentReport;

    var UniqueOrders = Model.Select(p => p.SALES_ORDERNO).Distinct().Count();
    var TotalRows = Model.Select(p => p.SALES_ORDERNO).Count();

    
    var oCurrentOwner = ViewBag.oCurrentOwner;
    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];
    var oArea = ViewBag.oArea;

    var UserRole = SessionUSer.ROLE_DESC;

    var IsRowSelectable = true;
    var IsRowSelectableforSignOff = false; //Used for Property Hidden true/false
    var IsOwnershipChangeallowed = false;

    if (UserRole == "CSR")
    {
        IsOwnershipChangeallowed = true;
        IsRowSelectable = false;
    }
    else if (UserRole == "Supervisor")
    {
        IsOwnershipChangeallowed = true;
        IsRowSelectable = false;
        
        if (oArea == "PendingSignOff")
        { IsRowSelectableforSignOff = true; }
    }
    else if (UserRole == "BPA" || UserRole == "Regional Lead")
    {
        IsOwnershipChangeallowed = true;
        IsRowSelectable = false;
        IsRowSelectableforSignOff = false;
    }
    else
    {
        IsOwnershipChangeallowed = false;
        IsRowSelectable = true;
        IsRowSelectableforSignOff = false;
    }

    var Approved_To_IsHidden = true;
    
    if (currentBCR == "Orders greater than 5 months" || currentBCR == "CRDD>6 Months")
    {
        Approved_To_IsHidden = false;
    }
    }
<div class="content-wrapper">
    <section class="content-header">
        <h4>
        Report Selected - <input type="text" value="@currentBCR" id="SelectedReportName" name="SelectedReportName" class="label-default" /> - # @UniqueOrders Unique Orders
        </h4>
        <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="halflings-icon home"></i>Home</a></li>
        <li><a href="@Url.Action("Summary", "BCR")"><i class="halflings-icon home"></i>BCR Summary</a></li>
        <li><a href="#"><i class="halflings-icon cog"></i>@currentBCR</a></li>
        </ol>
   </section>
    <div id="AdvancedsearchWindow" style="display: none;">
        @{Html.RenderPartial("_AdvancedFilters");}
    </div>
    <div id="ChangeOwnershipWindow" style="display: none;">
        @{Html.RenderPartial("_ChangeOrderOwnership");}
    </div>
    <section class="content">
    <div class="row">
    <div class="col-xs-12">
    <div class="box">    

@*        <div style="text-align:right;">
            Change Report to : 

            @(Html.Kendo().DropDownList()
              .Name("ControlReports")
              .HtmlAttributes(new { style = "width: 250px" })
              .Events(e => e.Select("onReportSelectedforProcessDetails"))
              .BindTo(ViewData["lstReportsMaster"] as SelectList)
                .DataValueField("Value")
                .DataTextField("Text")
              )
            </div>
*@

            @{ 
                if (IsRowSelectableforSignOff == true)
                {
                    @(Html.Kendo().Button()
                            .Name("btnApproveComments")
                            .Events(e => e.Click("showSelectedOrders"))
                            .HtmlAttributes(new { type = "button" })
                            .Icon("tick")
                            .Content("Approve Comments"))                    
                
                }

                if (IsOwnershipChangeallowed == true)
                {
                    @(Html.Kendo().Button()
                            .Name("btnChangeOwnership")
                            .HtmlAttributes(new { type = "button" })
                            .Icon("tick")
                            .Content("Change Order Ownership"))                                    
                
                }
                }
            
            @(Html.Kendo().Button()
                .Name("btnRefreshOrdersData")
                .HtmlAttributes(new { type = "button" })
                .Icon("tick")
                .Events(e => e.Click("RefreshOrdersData"))
                .Content("Refresh Orders List"))                    

           @(Html.Kendo().Grid(Model)
                   .Name("grdOrders")
                   .ToolBar(tools => tools.Excel())
                   .Columns(columns =>
                   {
                       columns.Template(@<text></text>)
                                       .ClientTemplate(
                                       "<input name='selectedOrder' class='checkbox' type='checkbox' onclick='selectRow(this)' />"
                                       )
                           .HeaderTemplate("Select All <br/> <input type='checkbox' id='masterCheckBox' title='All' onclick='checkAll(this)'/>")
                           .Width(60)
                           .Hidden(@IsRowSelectable)
                           .HeaderHtmlAttributes(new { style = "text-align:center" });

                       columns.Bound(p => p.SALES_ORG).Width(60).Filterable(fb => fb.Multi(true));
                       columns.Bound(p => p.SALES_ORDERNO).Groupable(false).Width(130).ClientFooterTemplate("Order Items: #= count#").ClientTemplate("<img src='../../Content/img/search-plus-24.png' />&nbsp;#= SALES_ORDERNO#");
                       columns.Bound(p => p.CUSTOMER_PO_NO).Title("PO Number").Width(100);
                       columns.Bound(p => p.ORDER_OWNER).Title("Order Owner").Width(130).Filterable(fb => fb.Multi(true));
                       columns.Bound(p => p.SOLD_TO_PARTY_NAME).Title("Sold-To Customer").Width(200);
                       columns.Bound(p => p.ORDER_DT).Title("Order Date").Width(200).Format("{0:MM/dd/yyyy}");
                       columns.Bound(p => p.ORDER_AGE).Title("Order Age").Width(80);
                       columns.Bound(p => p.BACKLOG_AMT).Width(100).Format("{0:c}").Title("Net Value (USD)").Width(100).ClientFooterTemplate("Net Value: #= kendo.toString(sum, 'C')#");
                       columns.Bound(p => p.APPROVED_TO_DATE).Title("Aproved-To Date").Width(100).Format("{0:MM/dd/yyyy}").Hidden(Approved_To_IsHidden);
                       columns.Bound(p => p.LATEST_COMMENT).Title("Latest Comment").Width(300);
                       columns.Bound(p => p.COMMENTED_DATE).Title("Comment Date").Width(100).Format("{0:MM/dd/yyyy}");
                       columns.Bound(p => p.COMMENTED_BY).Title("Comment By").Width(100);
                       columns.Bound(p => p.REASON_CODE).Title("Reason Code").Width(140).Filterable(fb => fb.Multi(true));
                       columns.Bound(p => p.REVIEW_DATE).Title("Next Review date").Width(100).ClientTemplate("#= REVIEW_DATE < 1/1/1900 ? '' : kendo.format('{0:MM/dd/yyyy}', REVIEW_DATE) #");
                       columns.Bound(p => p.SNAPSHOT_DATE).Title("Snapshot date").Width(100).ClientTemplate("#= SNAPSHOT_DATE < 1/1/1900 ? '' : kendo.format('{0:MM/dd/yyyy}', SNAPSHOT_DATE) #");
                       columns.Bound(p => p.CUSTOMER_REQ_GI_DATE).Title("CRDD Date").Width(80).Format("{0:MM/dd/yyyy}");
                       columns.Bound(p => p.CRDD_Age).Title("CRDD Age").Width(200);
                       columns.Bound(p => p.FE_FE_DESC).Title("Sales Rep").Width(200);
                       columns.Bound(p => p.REGION).Title("Order Region").Width(200);
                       columns.Bound(p => p.ReportName).Title("Report Name").Width(200);
                   })
                    .Scrollable(sc => sc.Height(350))
                            .Events(e => e.Change("OnChange").FilterMenuInit("onFilterMenuInit"))
                    .Pageable()
                    .Sortable()
                    .Selectable(selectable => selectable
                            .Mode(GridSelectionMode.Multiple)
                            .Type(GridSelectionType.Row))
                    .Resizable(r => r.Columns(true))
                    .Reorderable(reorder => reorder.Columns(true))
                    .Filterable()
                    .Groupable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Aggregates(aggregates =>
                        {
                            aggregates.Add(p => p.SALES_ORDERNO).Count();
                            aggregates.Add(p => p.BACKLOG_AMT).Sum();
                        })
                        .PageSize(20)
                        .Events(events => events.Error("error_handler"))
                                .Model(model => model.Id(p => p.SALES_ORDERNO))
                        .ServerOperation(false)
                            ).Excel(excel => excel
                                .FileName("CNG_SNI_Release_Target_Forecast.xlsx")
                                .Filterable(true)
                                .AllPages(true)
                                .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                                )

            )

            <input type="hidden" id="hid_SessionUSer_NTLOGIN" name="hid_SessionUSer_NTLOGIN" value="@SessionUSer.NTLOGIN" />
            <input type="hidden" id="hid_CurrentReport" name="hid_CurrentReport" value="@oCurrentReport.ReportName" />
            <input type="hidden" id="hid_Area" name="hid_Area" value="@oArea" />

            <div id="window" style="display: none;">
                @{Html.RenderPartial("_NewFollowup");}
            </div>

            <div class="overlay" id="spinner" name="spinner" style="visibility:hidden;">
            <i class="fa fa-refresh fa-spin"></i>
            </div>

        </div>
        </div>
    </div>
    </section>
    <div id="tabstrip">
        <ul>
            <li class="k-state-active">Commenting</li>
            <li>Comments History</li>
            <li>Open Follow-ups (<label id="lblOpenFollowups" name="lblOpenFollowups"></label>)</li>
            <li>Closed Follow-ups (<label id="lblClosedFollowups" name="lblClosedFollowups"></label>)</li>
            <li>Header Info</li>
            <li>Block Info</li>
            <li>Item Info</li>
            <li>Delivery Details</li>
            <li>Partner Details</li>
        </ul>
        <div>@{Html.RenderPartial("_NewComment");}</div>
        <div>@{Html.RenderPartial("_CommentHistory");}</div>
        <div>@{Html.RenderPartial("_Order_Open_Followup");}</div>
        <div>@{Html.RenderPartial("_Order_Closed_Followups");}</div>
        <div>@{Html.RenderPartial("_Order_Header_Info");}</div>
        <div>@{Html.RenderPartial("_Order_Block_Info");}</div>
        <div>@{Html.RenderPartial("_Order_Item_Info");}</div>
        <div>@{Html.RenderPartial("_Order_Delivery_Info");}</div>
        <div>@{Html.RenderPartial("_Order_Partner_Info");}</div>
    </div>

    <div class="alert alert-success alert-dismissable" id="div_signOff_Success" name="div_signOff_Success"
                        style="visibility: hidden;">
                        <button class="close" aria-hidden="true" type="button" data-dismiss="alert">
                            ×</button>
                        <h4>
                            <i class="icon fa fa-check"></i>Confirmation!</h4>
                        <p>
                        <input type="text" id="lbl_SignOff_Confirmation" name="lbl_SignOff_Confirmation" style="width:100%" class="label-default" />
                        </p>
           </div>
</div>
