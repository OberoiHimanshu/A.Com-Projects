@using System.Web.Mvc.Html
@model IEnumerable<Cockpit_NextGenMVC.BAL.Tbl_Followups>
@{
    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];
    var UserRole = SessionUSer.ROLE_DESC.ToString();
    var IsRowSelectableforSignOff = true;

    if (UserRole == "Supervisor" || UserRole == "CSR")
    {
        IsRowSelectableforSignOff = true;
    }

    var FolowupUpdated = "";

    if (Session["FolowupUpdated"] != null) { FolowupUpdated = Session["FolowupUpdated"].ToString(); }

    List<Cockpit_NextGenMVC.Controllers.Model_Pie> lstTeamMembers = (List<Cockpit_NextGenMVC.Controllers.Model_Pie>)Session["TeamProfile"];
}
<script type="text/javascript">

    function checkForm(form) {
        // validation fails if the input is blank
        if (form.inputfield.value == "") {
            alert("Error: Input is empty!");
            form.inputfield.focus();
            return false;
        }

        // regular expression to match only alphanumeric characters and spaces
        var re = /^[\w ]+$/;

        // validation fails if the input doesn't match our regular expression
        if (!re.test(form.inputfield.value)) {
            alert("Error: Input contains invalid characters!");
            form.inputfield.focus();
            return false;
        }

        // validation was successful
        return true;
    }

</script>
<div class="content-wrapper">
    <section class="content-header">
    <h1>
        Follow-up(s) List
        </h1>
        <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Home</a></li>
        <li><i class="halflings-icon cog"></i>@ViewBag.Title</li>
        </ol>
   </section>
    <section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div id="window" style="display: none;">
                @{Html.RenderPartial("_NewFollowup");}
            </div>

            <div id="ChangeFollwupOwnership" name="ChangeFollwupOwnership" style="display:none;" >
                @{Html.RenderPartial("_ChangeFollowupOwnership");}
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">

            

            <div id="windowReassign" style="display: none;">
                @using (Html.BeginForm("NewFollowup", "Followup", FormMethod.Post, new { id = "FrmREassign", onsubmit = "return validateForm()" }))
                {
                    <table align="center" cellpadding="5" cellspacing="5" style="border:1px solid gray">
                        <tr>
                            <td align="left" valign="top">Order Number :</td>
                            <td align="left" valign="top">
                                
                            </td>
                        </tr>
                        <tr>
                            <td align="left" valign="top">Current Owner :</td>
                            <td align="left" valign="top"></td>
                        </tr>
                        <tr>
                            <td align="left" valign="top">Re-assign to :</td>
                            <td align="left" valign="top">
                            @(Html.Kendo().ComboBox()
                                  .Name("Users")
                                  .Placeholder("Select size...")
                              .BindTo(lstTeamMembers)
                                  .SelectedIndex(0)
                                  .HtmlAttributes(new { style = "width:200px;" })
                                  .Suggest(true)
                                  )
                            </td>
                        </tr>
                    </table>
                }
    </div>
        </div>
    </div>

    <div class="row">

    <div class="col-xs-12">
    <div class="form-actions">
        <button id="btnNewFollowup" class="btn btn-warning" data-original-title="Create a New Followup for this order."
            data-rel="tooltip" type="button">
            New Follow-up</button>
    </div>
    
    <div class="box">
    @{
        if (@Session["ReassignedMsg"] != null)
        {
            <div style="font-size:14px; font-weight:bold; text-align:center;">
                @Session["ReassignedMsg"].ToString();
                @FolowupUpdated
            </div>
            
        }
    }
    
        @Html.Kendo().Button().Name("CloseFollowps").Content("Close Multiple Followups").Events(e => e.Click("CloseMultipleSelecedFollowups")).Icon("tick")

        @Html.Kendo().Button().Name("AssignOwnerships").Content("Change Ownership(s)").Icon("tick")

        @(Html.Kendo().Grid(Model)
                   .Name("grdMyFollowups")
                   .ToolBar(tools => tools.Excel())
                    .Columns(columns =>
                    {
                        columns.Template(@<text></text>)
                                       .ClientTemplate(
                                       "<input name='selectedOrder' class='checkbox' type='checkbox' onclick='selectFollowup(this)' />"
                                       )
                                       .HeaderTemplate("Select All <br/> <input type='checkbox' id='masterCheckBox' title='All' onclick='checkAllFollowups(this)'/>")
                                    .Width(80)
                                    .HeaderHtmlAttributes(new { style = "text-align:center" });
                        columns.Command(command => command.Edit()).Width(100).Visible(IsRowSelectableforSignOff).Title("Edit Followup");
                        columns.Bound(p => p.Followupid).Width(60).Title("ID");
                        columns.Bound(p => p.Sales_Order).Width(100).Title("Order Number");
                        columns.Bound(p => p.CustomerName).Width(200).Title("Customer Name");
                        columns.Bound(p => p.Description).Width(200);
                        columns.Bound(p => p.Comment).Width(200);
                        columns.Bound(p => p.DueDate).Width(130).Format("{0:MM/dd/yyyy}").Title("Due Date");
                        columns.Bound(p => p.Priority).Width(100).Title("Priority").EditorTemplateName("FollowupPriority").ClientTemplate("#=Priority#").Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Status).Width(100).Title("Status").Width(100).EditorTemplateName("FollowupstatusList").ClientTemplate("#=Status#").Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Owner).Width(100).Title("Owner").Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Modified_By).Width(100).Title("Last Modified By");
                        columns.Bound(p => p.Modified_On).Title("Last Modified On").Width(100).Format("{0:MM/dd/yyyy}");
                        columns.Bound(p => p.Created_By).Title("Created By").Width(100).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Created_On).Title("Created On").Width(100).Format("{0:MM/dd/yyyy}");
                    })
                        .Events(e => e.Change("OnFollowupChange").DataBound("AddIndiactor_DueDate"))
                        .Pageable()
                        .Sortable()
                        .Scrollable()
                        .Selectable(selectable => selectable
                                                    .Mode(GridSelectionMode.Multiple)
                                                    .Type(GridSelectionType.Row))
                                .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditFollowup").Window(w => w.Title("Edit Followup").HtmlAttributes(new { @style = "width:150px;" })))
                        .Filterable()
                        .Groupable()
                        .ColumnMenu()
                        .Excel(excel => excel
                            .FileName("Followups.xlsx")
                            .Filterable(true)
                            .AllPages(true)
                            .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                        )
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(20)
                                            .Events(events => events.Error("error_handler").RequestEnd("Refresh_FollowupList"))
                                    .Model(model =>
                                    {
                                        model.Id(p => p.Sales_Order);
                                        model.Field(p => p.Followupid).Editable(false);
                                        model.Field(p => p.Sales_Order).Editable(false);
                                        model.Field(p => p.CustomerName).Editable(true);
                                        model.Field(p => p.Description).Editable(true);
                                        model.Field(p => p.Comment).Editable(true);
                                        model.Field(p => p.Created_By).Editable(false);
                                        model.Field(p => p.DueDate).Editable(true);
                                        model.Field(p => p.Priority).Editable(true);
                                        model.Field(p => p.Status).Editable(true);
                                        model.Field(p => p.Modified_By).Editable(false);
                                        model.Field(p => p.Modified_On).Editable(false);
                                        model.Field(p => p.Created_By).Editable(false);
                                        model.Field(p => p.Created_On).Editable(false);
                                    })
                                    .Read(read => read.Action("CreateFollowup", "Followup"))
                                    .Update(read => read.Action("UpdateFollowups", "Followup"))
                                    .Create(read => read.Action("CreateFollowup", "Followup"))
                            .ServerOperation(false)
                        )
                        .Resizable(resize => resize.Columns(true))
                        .Reorderable(reorder => reorder.Columns(true))
                    )


                    <input type="hidden" id="hid_UserEmail" name="hid_UserEmail" value="@SessionUSer.EMAIL" />

    </div>
    
    </div>
    </div>
    
    <div class="row">

        @(Html.Kendo().TabStrip()
    .Name("tabstrip")
    .SelectedIndex(0)
        .Items(tabstrip =>
        {
            tabstrip.Add().Text("<span class='km-icon revenue'></span><span class='hidden-xs'>Follow-up History</span>")
                    .Encoded(false)
                    .Content(@<text> 
                    
                    <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <td>
                                Sales Order
                            </td>
                            <td>
                                Customer Name
                            </td>
                            <td>
                                Description
                            </td>
                            <td>
                                Owner
                            </td>
                            <td>
                                Due Date
                            </td>
                            <td>
                                Comments
                            </td>
                            <td>
                                Status
                            </td>
                            <td>
                                Priority
                            </td>
                            <td>
                                Modified By
                            </td>
                            <td>
                                Modified On
                            </td>
                        </tr>
                    </thead>
                    <tbody name="FollowupHistory" id="FollowupHistory">
                    </tbody>
                </table>


                    </text>);

            tabstrip.Add().Text("<span class='km-icon spd'></span><span class='hidden-xs'>Quick Email Follow-up</span>")
         .Encoded(false)
         .Content(@<text> 
            
            <div class="col-xs-6">
                
                <h3 class="box-title">
                    <i class="fa fa-envelope"></i>
                    Quick Email Follow-up
                </h3>

                <form action="@Url.Action("PushFollowup", "Followup")" method="post">
                <div class="form-group">
                    TO : (Use ';' for Multiple email receivers.) <input id="emailto" name="emailto" class="form-control" type="email" placeholder="Email to:" style="width: 70%">
                </div>
                <div class="form-group">
                    CC: (Use ';' for Multiple email receivers.) <input id="emailCC" name="emailCC" class="form-control" type="emailCC" placeholder="Email CC:" style="width: 70%">
                </div>
                <div class="form-group">
                    Subject : <input id="emailsubject" name="subject" class="form-control" readonly="readonly" type="text" placeholder="Sales Order Follow-up: " style="width: 70%">
                </div>
                <div>
                    Body :
                    @(Html.Kendo().Editor()
                                      .Name("Body")
                                      .HtmlAttributes(new { style = "width: 740px;height:150px" })
                                )
                </div>
                <div class="form-group">
                    <button class="pull-left btn btn-default large" id="sendEmail">Send Email <i class="fa fa-arrow-circle-right"></i></button>
                </div>
                </form>
            </div>
         
         </text>);

        })
     )
    </div>

    
    </section>
    <script>
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }

        

    </script>
    <script type="text/javascript">

        function clickView(e) {
            var window = $("#windowReassign"),
            btnNewFollowup = $(".k-grid-Re-assign");
            var data = this.dataItem($(e.target).closest("tr"));

            btnNewFollowup.bind("click", function () {
                window.data("kendoWindow").open();
                btnNewFollowup.hide();
            });


            if (!window.data("kendoWindow")) {
                window.kendoWindow({
                    width: "700px",
                    actions: ["Close"],
                    title: "Re-assign Follow-up",
                    close: function () {
                        btnNewFollowup.show();
                    }
                });
            }
        }
    </script>
    @(Html.Kendo().Window().Name("Details")
    .Title("Re-assign Followup")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(400)
)
    <style>
        .mypertextbox
        {
            border: none;
            background-color: #fff;
            background: transparent;
        }
    </style>
    <script type="text/x-kendo-template" id="template">
 
 @using (Html.BeginForm("ReassignFollowup", "Followup", FormMethod.Post, new { id = "FrmREassign" }))
 {
    <table align="center" cellpadding="5" cellspacing="5" style="border:0px solid gray">
        <tr style="height:40px !important;">
            <td align="left" valign="top"><b>Follow-Up ID : </b></td>
            <td align="left" valign="top" data-bind="text: Followupid">
                  <input type="text" name="lblFollowupID" value="#= Followupid #" readonly class="mypertextbox" />
 
            </td>
        </tr>
        <tr style="height:40px !important;">
            <td align="left" valign="top"><b>Sales Order Number :</b></td>
            <td align="left" valign="top">
                 #= Sales_Order #               
            </td>
        </tr>
        <tr style="height:40px !important;">
            <td align="left" valign="top"><b>Current Owner :</b></td>
            <td align="left" valign="top">
                 #= Owner #             
            </td>
        </tr>
        <tr style="height:40px !important;">
            <td align="left" valign="top"><b>Select New Owner :</b></td>
            <td align="left" valign="top">
                @(Html.Kendo().DropDownList()
            .Name("Role")
            .DataTextField("category")
            .DataValueField("category")
            .BindTo(lstTeamMembers)
            .SelectedIndex(0)
            .Enable(true)
            .ToClientTemplate()
            )
            </td>
        </tr>
        <tr style="height:40px !important;">
            <td colspan="2" align="center"><input type="submit" value="Re-assign Follow Up"></td>
        </tr>
    </table>

    
 }
    </script>
    <script type="text/javascript">
        var detailsTemplate = kendo.template($("#template").html());

        function showDetails(e) {
            e.preventDefault();

            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var wnd = $("#Details").data("kendoWindow");

            wnd.content(detailsTemplate(dataItem));
            wnd.center().open();
        }
    </script>
