@model  Cockpit_NextGenMVC.Models.DashboardModal
@{
    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];

    IEnumerable<Cockpit_NextGenMVC.Models.Backlogstats> listStats = Model.BCR_Level1_RawData;
    SelectList ReportsList = Model.lstReportsMaster;

    var UserRole = SessionUSer.ROLE_DESC;
    var IsReportbyOwner = true;
    var IsReportbyRegion = false;
    var IsReportbyReportName = false;

    var DefaultReprot = ViewBag.DefaultReport;
    var Area = ViewBag.oArea; ;

    if (UserRole == "WW Lead")
    {
        IsReportbyOwner = true;
        IsReportbyRegion = false;
        IsReportbyReportName = false;
    }
    else if (UserRole == "Supervisor")
    {
        IsReportbyOwner = false;
        IsReportbyRegion = true;
        IsReportbyReportName = false;
    }
    else
    {
        IsReportbyOwner = false;
        IsReportbyRegion = true;
        IsReportbyReportName = false;
    }    
}
<div class="col-xs-12">
    <div class="box">
        <div id="content" class="span11" style="min-height: 939px;">
            <div id="tabstrip">
                <ul>
                    <li>Summary Analysis</li>
                    <li class="k-state-active">Summary Details</li>
                </ul>
                <div>
                        @(Html.Kendo().Chart()
                        .Name("BCRSummarychart")
                        .Title("Control Reports Summary")
                        .Legend(legend => legend
                            .Visible(false)
                        )
                        .Series(series =>
                        {
                            series.Pie(Model.Pie_Model).Labels(l => l
                                .Template("#= category #: \n #= value#")
                                .Background("transparent")
                                .Visible(true)
                                )
                            .StartAngle(150);
                        })
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Format("{0} #")
                        )

                    )
                    @(Html.Kendo().Chart()
                                .Name("BCRDetailschart")
                                .Title("Control Reports Backlog Details")
                                .Legend(legend => legend
                                    .Visible(false)
                                )
                                .SeriesDefaults(seriesDefaults =>
                                    seriesDefaults.Bar().Stack(ChartStackType.Stack100)
                                )
                                .Series(series =>
                                {
                                    series.Bar(Model.Level2_Summary.PendingComments).Name("Pending Comments").Color("#f3ac32");
                                    series.Bar(Model.Level2_Summary.PendingReview).Name("Pending Reviews").Color("#b8b8b8");
                                    series.Bar(Model.Level2_Summary.PendingSignOff).Name("#Pending Sign-Offs#").Color("#bb6e36");
                                })
                                .CategoryAxis(axis => axis
                                    .Name("series-axis")
                                    .Line(line => line.Visible(false))
                                )
                                .CategoryAxis(axis => axis
                                    .Name("label-axis")
                                    .Categories(Model.Level2_Summary.UniqueReports)
                                )
                                .ValueAxis(axis => axis
                                    .Numeric()
                                        .Labels(labels => labels.Format("{0}"))

                                        // Move the label-axis all the way down the value axis
                                        .AxisCrossingValue(0, int.MinValue)
                                )

                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}")
                                    .Template("#= series.name #: #= value #")
                                )

                            )
                </div>
                <div>
                    @(Html.Kendo().Grid(listStats).Name("grdOrders")
                    .ToolBar(tools =>
                    {
                        tools.Excel();
                        tools.Custom().Text("Raw Data Export").Action("ExcelExport", "BCR", new { Region = @SessionUSer.SUPERREGION });
                    })
                    .Columns(c =>
                            {
                                c.Bound(p => p.ReportName).Width(150).Hidden(IsReportbyReportName);
                                c.Bound(p => p.PendingComments).Width(100).Title("Pending Comments").ClientTemplate("<a href='/BCR/CSRReport?Report=#= ReportName#&Owner=#= OrderOwner#&Area=Uncommented' onclick='showProgress();'>#=PendingComments#</a>").ClientFooterTemplate("Orders: #= sum#");
                                c.Bound(p => p.PendingReview).Width(100).Title("Pending Reviews").ClientTemplate("<a href='/BCR/CSRReport?Report=#= ReportName#&Owner=#= OrderOwner#&Area=PendingReview' onclick='showProgress();'>#=PendingReview#</a>").ClientFooterTemplate("Orders: #= sum#");
                                c.Bound(p => p.PendingSignOff).Width(100).Title("Pending Sign-Off").ClientTemplate("<a href='/BCR/CSRReport?Report=#= ReportName#&Owner=#= OrderOwner#&Area=PendingSignOff' onclick='showProgress();'>#=PendingSignOff#</a>").ClientFooterTemplate("Orders: #= sum#");
                            }).Scrollable(sc => sc.Height(350)).Pageable().Filterable().Groupable().DataSource(dataSource => dataSource
                            .Ajax()
                            .Aggregates(aggregates =>
                            {
                                aggregates.Add(p => p.PendingComments).Sum();
                                aggregates.Add(p => p.PendingReview).Sum();
                                aggregates.Add(p => p.PendingSignOff).Sum();
                            })
                            .PageSize(20)
                            .Model(model => model.Id(p => p.ReportName))
                            .ServerOperation(false)
                                 ).Excel(excel => excel
                                     .FileName("CNG_BCR_Summary_Details.xlsx")
                                     .Filterable(true)
                                     .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                                     ))
                </div>
            </div>
        </div>
    </div>
</div>
