@model IEnumerable<Cockpit_NextGenMVC.BAL.Tbl_SNI_Release_Projection>
@{

    Cockpit_NextGenMVC.BAL.VW_USERS SessionUSer = (Cockpit_NextGenMVC.BAL.VW_USERS)Session["UserProfile"];
    var UserRole = SessionUSer.ROLE_DESC;
    var UserRegion = SessionUSer.SUPERREGION;
    var UserTeam = SessionUSer.TEAM_NAME;
    string Forecastfor = "";

    if (UserRole == "BPA" || UserRole == "Regional lead")
    {
        Forecastfor = UserRegion;
    }
    else
    {
        Forecastfor = UserTeam;
    }

}
<script>
    function pointColor(point) {
        var summary = point.dataItem.Summary;
        if (summary) {
            return summary == "total" ? "#555" : "gray";
        }

        if (point.value > 0) {
            return "green";
        } else {
            return "red";
        }
    }
</script>
<div class="content-wrapper">
    <section class="content-header">
    <h1>
        Delivery Block Analytics
        <small>- Click here for <a id="btnAdvancedSearch" href="#">Advanced Search</a></small>
        </h1>
        <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="halflings-icon home"></i>Home</a></li>
        <li><a href="#"><i class="halflings-icon cog"></i>@ViewBag.Title</a></li>
        </ol>
   </section>
    <section class="content">
    <div class="row">
    <div class="col-xs-12">
    <div class="box">
    <div id="content" class="span11" style="min-height: 939px;">

            @(Html.Kendo().Chart()
            .Name("RegionalSNIForecast")
            .Title("Delivery block Target Release Projection for - " + @Forecastfor)
            .Legend(legend => legend
                .Visible(false)
            )
            .Series(series =>
            {
                series.Column((double[])ViewData["ProjectedValue"]).Name("Forecasted Value (USD)").Color("#f3ac32");
            })
            .CategoryAxis(axis => axis
                .Name("series-axis")
                .Line(line => line.Visible(false))
            )
            .CategoryAxis(axis => axis
                .Name("label-axis")
                .Categories((string[])ViewData["Months"])
            )
            .ValueAxis(axis => axis
                .Numeric()
                    .Labels(labels => labels.Template("#= FormatLongNumber(value) #"))

                    // Move the label-axis all the way down the value axis
                    .AxisCrossingValue(0, int.MinValue)
            )

            .Tooltip(tooltip => tooltip
                .Visible(true)
                .Format("$ ##,#")
                .Template("#= series.name #: #= FormatLongNumber(value) #")
            )

        )



        @Html.Kendo().Grid(Model).Name("grdSummaryData").ToolBar(tools => tools.Excel()).Columns(c =>
        {
            c.Bound(p => p.REGION).Width(80);
            c.Bound(p => p.SALES_ORG).Width(80).Title("Sales Org.");
            c.Bound(p => p.PRIMARY_PRODUCT).Width(100).Title("Primary Product").Filterable(true);
            c.Bound(p => p.TEAM_NAME).Width(100).Title("Team Name");
            c.Bound(p => p.SALES_ORDERNO).Width(100).Title("Sales Order").Filterable(true);
            c.Bound(p => p.ORDER_CREATED_BY).Width(100).Title("Order Owner");
            c.Bound(p => p.DELIVERY_BLK_HDR_DESC).Width(150).Title("Delivery Block");
            c.Bound(p => p.BILLING_BLOCK_DESC).Width(150).Title("Billing Block");
            c.Bound(p => p.Feedback).Width(100).Format("{0:MM/dd/yyyy}").Title("Exp. Clear Date");
            c.Bound(p => p.Feedback_Calc_Est_Invoice_dt_Month).Width(100).Format("{0:MM/dd/yyyy}").Title("Forecasted Month");
            c.Bound(p => p.BAcklog).Width(100).Format("{0:c}").Title("Forecasted USD");
        }).Scrollable(sc => sc.Height(350)).Groupable().Filterable().ColumnMenu().Reorderable(reorder => reorder.Columns(true)).Resizable(r => r.Columns(true)).Pageable().Sortable().DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.SALES_ORDERNO))
            .ServerOperation(false)
                 ).Excel(excel => excel
                        .FileName("CNG_DB_Release_Target_Forecast.xlsx")
                        .Filterable(true)
                        .AllPages(true)
                        .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                        )

            
    </div>
</div>

   </div>
    </div>
    </section>
</div>

<script>
    function FormatLongNumber(value) {
        if (value == 0) {
            return 0;
        }
        else {
            // for testing
            //value = Math.floor(Math.random()*1001);

            // hundreds
            if (value <= 999) {
                return Math.floor(value);
            }

            // thousands
            else if (value >= 1000 && value <= 999999) {
                return Math.floor((value / 1000)) + 'K';
            }

            // millions
            else if (value >= 1000000 && value <= 999999999) {
                return Math.floor((value / 1000000)) + 'M';
            }

            // billions
            else if (value >= 1000000000 && value <= 999999999999) {
                return Math.floor((value / 1000000000)) + 'B';
            }
            else
                return Math.floor(value);
        }

    }
</script>