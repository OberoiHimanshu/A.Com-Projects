@{
    List<Cockpit_NextGenMVC.BAL.Tbl_Order_comments> OrderCommentsHistory = new List<Cockpit_NextGenMVC.BAL.Tbl_Order_comments>();
}

                @(Html.Kendo().Grid(OrderCommentsHistory)
                   .Name("grdOrderHistory")
                   .ToolBar(tools => tools.Excel())
                   .Columns(columns =>
                    {
                        columns.Bound(p => p.Report).Title("Block State").Width(80).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Sales_Ord).Title("Order Number").Width(80);
                        columns.Bound(p => p.Material).Width(100);
                        columns.Bound(p => p.OrderOwner).Width(100);
                        columns.Bound(p => p.Reason_Code).Title("Reason code").Width(100).Filterable(fb => fb.Multi(true));
                        columns.Bound(p => p.Cleardate).Title("Expected Release date").Width(100);
                        columns.Bound(p => p.Comment).Title("Comment").Width(140);
                        columns.Bound(p => p.Comment_Date).Title("Comment Date").Width(100);
                        columns.Bound(p => p.Commented_By).Title("Comment By").Width(100);
                    })
                    .Scrollable(sc => sc.Height(350))
                    .Pageable()
                    .Sortable()
                    .Scrollable()
                    .Filterable()
                    .Groupable()
                    .ColumnMenu()
                    
                                    //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditUser"))
                    .Excel(excel => excel
                        .FileName("CNG_Order_Comments_History.xlsx")
                        .Filterable(true)
                        .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                        )
                    .HtmlAttributes(new { style = "height:630px;" })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        
                        .PageSize(20)
                                .Events(events => events.Error("onError"))
                               
                        .Model(model => model.Id(p => p.Report))
                        .ServerOperation(false)
                                .Update(u => u.Action("SaveUserDetails", "User"))
                    )
                    .Resizable(resize => resize.Columns(true))

                        )
